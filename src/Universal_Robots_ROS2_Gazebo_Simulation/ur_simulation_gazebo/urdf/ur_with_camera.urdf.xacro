<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
  <!-- Wrapper URDF to add a wrist depth camera to the UR robot -->

  <!-- Pass-through args matching ur_description/ur.urdf.xacro -->
  <xacro:arg name="name" default="ur"/>
  <xacro:arg name="ur_type" default="ur5e"/>
  <xacro:arg name="tf_prefix" default="" />
  <!-- expose arg as property for ${tf_prefix} usage -->
  <xacro:property name="tf_prefix" value="$(arg tf_prefix)"/>
  <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
  <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
  <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
  <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>
  <xacro:arg name="headless_mode" default="false" />
  <xacro:arg name="generate_ros2_control_tag" default="true" />
  <xacro:arg name="robot_ip" default="0.0.0.0" />
  <xacro:arg name="script_filename" default=""/>
  <xacro:arg name="output_recipe_filename" default=""/>
  <xacro:arg name="input_recipe_filename" default=""/>
  <xacro:arg name="reverse_ip" default="0.0.0.0"/>
  <xacro:arg name="script_command_port" default="50004"/>
  <xacro:arg name="reverse_port" default="50001"/>
  <xacro:arg name="script_sender_port" default="50002"/>
  <xacro:arg name="trajectory_port" default="50003"/>
  <xacro:arg name="use_tool_communication" default="false" />
  <xacro:arg name="tool_voltage" default="0" />
  <xacro:arg name="tool_parity" default="0" />
  <xacro:arg name="tool_baud_rate" default="115200" />
  <xacro:arg name="tool_stop_bits" default="1" />
  <xacro:arg name="tool_rx_idle_chars" default="1.5" />
  <xacro:arg name="tool_tx_idle_chars" default="3.5" />
  <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
  <xacro:arg name="tool_tcp_port" default="54321" />
  <xacro:arg name="use_fake_hardware" default="false" />
  <xacro:arg name="fake_sensor_commands" default="false" />
  <xacro:arg name="sim_gazebo" default="true" />
  <xacro:arg name="sim_ignition" default="false" />
  <xacro:arg name="simulation_controllers" default="$(find ur_simulation_gazebo)/config/ur_controllers.yaml" />
  <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>
  <!-- Make arg accessible as property for xacro.load_yaml -->
  <xacro:property name="initial_positions_file" value="$(arg initial_positions_file)"/>

  <!-- Include UR macro definitions only -->
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

  <!-- Provide world link for parenting the robot -->
  <link name="world" />

  <!-- Instantiate UR base robot -->
  <xacro:ur_robot
    name="$(arg name)"
    tf_prefix="$(arg tf_prefix)"
    parent="world"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    generate_ros2_control_tag="$(arg generate_ros2_control_tag)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="$(arg fake_sensor_commands)"
    sim_gazebo="$(arg sim_gazebo)"
    sim_ignition="$(arg sim_ignition)"
    headless_mode="$(arg headless_mode)"
    initial_positions="${xacro.load_yaml(initial_positions_file)}"
    use_tool_communication="$(arg use_tool_communication)"
    tool_voltage="$(arg tool_voltage)"
    tool_parity="$(arg tool_parity)"
    tool_baud_rate="$(arg tool_baud_rate)"
    tool_stop_bits="$(arg tool_stop_bits)"
    tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
    tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
    tool_device_name="$(arg tool_device_name)"
    tool_tcp_port="$(arg tool_tcp_port)"
    robot_ip="$(arg robot_ip)"
    script_filename="$(arg script_filename)"
    output_recipe_filename="$(arg output_recipe_filename)"
    input_recipe_filename="$(arg input_recipe_filename)"
    reverse_ip="$(arg reverse_ip)"
    script_command_port="$(arg script_command_port)"
    reverse_port="$(arg reverse_port)"
    script_sender_port="$(arg script_sender_port)"
    trajectory_port="$(arg trajectory_port)">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:ur_robot>

  <!-- ros2_control plugin passthrough for Gazebo -->
  <xacro:if value="$(arg sim_gazebo)">
    <gazebo>
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <parameters>$(arg simulation_controllers)</parameters>
        <ros2_control>
          <parameters>$(arg simulation_controllers)</parameters>
        </ros2_control>
      </plugin>
    </gazebo>
  </xacro:if>

  <!-- Wrist-mounted depth camera -->
  <link name="wrist_camera_link">
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-5" iyy="1e-5" izz="1e-5" ixy="0" ixz="0" iyz="0"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.02 0.04 0.02"/>
      </geometry>
      <material name="Grey">
        <color rgba="0.6 0.6 0.6 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.04 0.02"/>
      </geometry>
    </collision>
  </link>

  <!-- Mount the camera tight to the tool flange so it moves with the wrist -->
  <joint name="tool0_wrist_camera_joint" type="fixed">
    <parent link="${tf_prefix}tool0"/>
    <child link="wrist_camera_link"/>
    <origin xyz="0 0 0.05" rpy="0 -1.57079632679 0"/>
  </joint>

  <!-- Optical frame following REP103/REP105 -->
  <link name="wrist_camera_optical_frame"/>
  <joint name="wrist_camera_optical_joint" type="fixed">
    <parent link="wrist_camera_link"/>
    <child link="wrist_camera_optical_frame"/>
    <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679"/>
  </joint>

  <!-- Gazebo depth camera sensor -->
  <gazebo reference="wrist_camera_link">
    <sensor type="depth" name="wrist_camera">
      <update_rate>20.0</update_rate>
      <always_on>true</always_on>
      <visualize>false</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <depth_camera />
        <clip>
          <near>0.05</near>
          <far>3.5</far>
        </clip>
      </camera>
      <plugin name="wrist_camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/wrist_camera</namespace>
          <remapping>wrist_camera/image_raw:=image_raw</remapping>
          <remapping>wrist_camera/depth/image_raw:=depth/image_raw</remapping>
          <remapping>wrist_camera/camera_info:=camera_info</remapping>
          <remapping>wrist_camera/depth/camera_info:=depth/camera_info</remapping>
          <remapping>wrist_camera/points:=points</remapping>
        </ros>
        <camera_name>wrist_camera</camera_name>
        <frame_name>wrist_camera_optical_frame</frame_name>
        <min_depth>0.05</min_depth>
        <max_depth>3.5</max_depth>
      </plugin>
    </sensor>
  </gazebo>

</robot>
